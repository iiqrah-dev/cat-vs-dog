{"version":3,"sources":["components/Pet.js","App.js","reportWebVitals.js","index.js"],"names":["Pet","perc","token","setPerc","petemoji","useState","color","setColor","contractProcessor","useWeb3ExecuteFunction","isAuthenticated","useMoralis","vote","upDown","a","options","contractAddress","functionName","abi","params","_pet","_vote","fetch","onSuccess","console","log","alert","onError","error","useEffect","className","style","boxShadow","marginTop","backgroundColor","onClick","text","theme","type","e","App","cat","setcat","dog","setdog","useMoralisWeb3Api","Moralis","isInitialized","getRatio","pet","Votes","Object","extend","query","Query","equalTo","descending","first","results","up","Number","attributes","down","ratio","Math","round","createLiveQuery","subscribe","on","object","ticker","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.0351678e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Pet.css\";\nimport { Button } from \"web3uikit\";\nimport { useWeb3ExecuteFunction, useMoralis } from \"react-moralis\";\n\n\nfunction Pet({ perc, setPerc, token, petemoji }) {\n\n  const [color, setColor] = useState();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const { isAuthenticated} = useMoralis();\n\n  useEffect(() => {\n    if (perc < 50) {\n      setColor(\"#F72D44\");\n    } else {\n      setColor(\"#D0E562\");\n    }\n  }, [perc]);\n\n\n  async function vote(upDown){\n\n      let options = {\n        contractAddress: \"0xa2C467ec049f1F3C84ddd9744E70965aDbfAfBe0\",\n        functionName: \"vote\",\n        abi: [\n          {\"inputs\":[{\"internalType\":\"string\",\"name\":\"_pet\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_vote\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}\n        ],\n        params: {\n          _pet: token,\n          _vote: upDown,\n        },\n      }\n\n\n\n      await contractProcessor.fetch({\n        params: options,\n        onSuccess: () => {\n          console.log(\"vote succesful\");\n          alert(\"Vote Succesful!\")\n        },\n        onError: (error) => {\n          console.log(\"vote unsuccesful\");\n          alert(\"Vote Unsuccesful :/ You have already voted once.\")\n        },\n      });\n\n  }\n\n\n  return (\n    <>\n      <div>\n\n      <div className=\"petemoji\">{petemoji}</div>\n        <div className=\"token\">{token}</div>\n        <div className=\"circle\" style={{ boxShadow: `0 0 20px ${color}` }}>\n          <div\n            className=\"wave\"\n            style={{\n              marginTop: `${100 - perc}%`,\n              boxShadow: `0 0 20px ${color}`,\n              backgroundColor: color,\n            }}\n          ></div>\n          <div className=\"percentage\">{perc}%</div>\n        </div>\n\n\n        <div className=\"votes\">\n          <Button \n            onClick={() => {\n              if(isAuthenticated){\n                vote(true)\n              }else{\n                alert(\"Authenicate to Vote\")\n              }}}\n            text=\"Up\" \n            theme=\"primary\" \n            type=\"button\" \n          />\n\n          <Button\n            color=\"red\"\n            onClick={() => {\n\n              try{ if(isAuthenticated){\n                vote(false)\n              }\n            \n              else{\n                alert(\"Authenicate to Vote\")\n              }\n            } catch(e) { alert(\"Authenicate to Vote\") }\n\n              }}\n            text=\"Down\"\n            theme=\"colored\"\n            type=\"button\"\n          />\n        </div>\n\n\n\n        </div>\n    </>\n  );\n}\n\nexport default Pet;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { ConnectButton } from \"web3uikit\";\n//import logo from \"./images/catvsdog-logo.png\";\nimport Pet from \"./components/Pet\";\nimport { useMoralisWeb3Api, useMoralis } from \"react-moralis\";\n\n\nconst App = () => {\n\n  const [cat, setcat] = useState(80);\n  const [dog, setdog] = useState(30);\n  //const [modalPrice, setModalPrice] = useState();\n  const Web3Api = useMoralisWeb3Api();\n  const {Moralis, isInitialized} = useMoralis();\n  \n  async function getRatio(pet, setPerc){\n\n    const Votes = Moralis.Object.extend(\"Votes\");\n    const query = new Moralis.Query(Votes);\n    query.equalTo(\"pet\", pet);\n    query.descending(\"createdAt\");\n    const results = await query.first();\n    let up = Number(results.attributes.up);\n    let down = Number(results.attributes.down);\n    let ratio = Math.round(up/(up+down)*100);\n    setPerc(ratio);\n  }\n\n  useEffect(() => {\n    if(isInitialized){\n    getRatio(\"Cat\", setcat);\n    getRatio(\"Dog\", setdog);\n\n    async function createLiveQuery(){\n      let query = new Moralis.Query('Votes');\n      let subscription = await query.subscribe();\n      subscription.on('update', (object) => {\n        \n        if(object.attributes.pet === \"Cat\"){\n          getRatio(\"Cat\", setcat);\n        }else if(object.attributes.ticker === \"Dog\"){\n          getRatio(\"Dog\", setdog);\n        }\n\n      });\n    }\n\n\n    createLiveQuery();\n    }\n\n  }, [isInitialized]);\n\n  return (\n    <>\n\n      <div className=\"header\">\n        \n        <ConnectButton />\n      </div>\n\n      \n      <div className=\"pollheading\">\n      \n        The Ultimate: Cat vs Dog Poll      \n        \n        </div>\n        \n\n      <div className=\"instructions\">\n        Which pet do you prefer? Vote now.\n      </div>\n\n\n      <div className=\"list\">\n        <Pet \n          perc={cat} \n          setPerc={setcat} \n          token={\"Cat\"}\n          petemoji={\"😼\"}\n       \n        />\n        <Pet \n          perc={dog} \n          setPerc={setdog} \n          token={\"Dog\"}\n          petemoji={\"🐶\"}\n          \n        />\n      </div>\n\n          \n     \n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from \"react-moralis\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId=\"1nQ2ns2B8ol4A85mY7L6azEOr1DkofNIcgko3Yfv\" serverUrl=\"https://had3wrolmufr.usemoralis.com:2053/server\">\n          <App />\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}